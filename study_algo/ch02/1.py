"""
< 그리디 & 구현 >

그리디 알고리즘(탐욕법)은 현재 상황에서 지금 당장 좋은 것만 고르는 방법을 의미
일반적인 그리디 알고리즘은 문제를 풀기 위한 최소한의 아이디어를 떠올릴 수 있는 능력을 요구함
그리디 해법은 그 정당성 분석이 중요
단순히 가장 좋아 보이는 것을 반복적으로 선택해도 최적의 해를 구할 수 있는지 검토함

[문제 상황] 루트 노드부터 시작하여 거쳐 가는 노드 값의 합을 최대로 만들고 싶음
Q. 최적의 해는 무엇인가?

일반적인 상황에서 그리디 알고리즘은 최적의 해를 보장할 수 없을 때가 많음
하지만 코딩 테스트에서 대부분의 그리디 문제는 탐욕법으로 얻은 해가 최적의 해가 되는 상황에서 이를 추론할 수 있어야 풀리도록 출제됨

"""
n = 1260
coins = [500, 100, 50, 10]

count = 0
for coin in coins:
    if n >= coin:
        count += n // coin
        n %= coin

print(count)